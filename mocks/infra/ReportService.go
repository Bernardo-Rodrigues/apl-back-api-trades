// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	fasthttp "github.com/valyala/fasthttp"
)

// ReportService is an autogenerated mock type for the ReportService type
type ReportService struct {
	mock.Mock
}

type ReportService_Expecter struct {
	mock *mock.Mock
}

func (_m *ReportService) EXPECT() *ReportService_Expecter {
	return &ReportService_Expecter{mock: &_m.Mock}
}

// GenerateReport provides a mock function with given fields: ctx
func (_m *ReportService) GenerateReport(ctx *fasthttp.RequestCtx) {
	_m.Called(ctx)
}

// ReportService_GenerateReport_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GenerateReport'
type ReportService_GenerateReport_Call struct {
	*mock.Call
}

// GenerateReport is a helper method to define mock.On call
//   - ctx *fasthttp.RequestCtx
func (_e *ReportService_Expecter) GenerateReport(ctx interface{}) *ReportService_GenerateReport_Call {
	return &ReportService_GenerateReport_Call{Call: _e.mock.On("GenerateReport", ctx)}
}

func (_c *ReportService_GenerateReport_Call) Run(run func(ctx *fasthttp.RequestCtx)) *ReportService_GenerateReport_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fasthttp.RequestCtx))
	})
	return _c
}

func (_c *ReportService_GenerateReport_Call) Return() *ReportService_GenerateReport_Call {
	_c.Call.Return()
	return _c
}

func (_c *ReportService_GenerateReport_Call) RunAndReturn(run func(*fasthttp.RequestCtx)) *ReportService_GenerateReport_Call {
	_c.Call.Return(run)
	return _c
}

// NewReportService creates a new instance of ReportService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewReportService(t interface {
	mock.TestingT
	Cleanup(func())
}) *ReportService {
	mock := &ReportService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
